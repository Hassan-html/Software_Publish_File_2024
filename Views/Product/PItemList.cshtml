@model IEnumerable<SialkotSweet.Models.TblPurchaseItem>
@{
    ViewBag.Title = "PItemList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid p-2">
    <div class="row">
        <div class="col-md-2">
            <input type="text" class="form-control" id="MyInput1" onkeyup="myFunction1()" placeholder="BatchNo" />
        </div>
        <div class="col-md-2">
            <input type="text" class="form-control" id="MyInput2" onkeyup="myFunction2()" placeholder="Item Name" />
        </div>
        <div class="col-md-3">
            <input type="text" class="form-control" id="MyInput3" onkeyup="myFunction3()" placeholder="Size" />
        </div>
        <div class="col-md-2">
            <a href="@Url.Action("Home","Home")" class="btn btn-dark form-control">Back to Home</a>
        </div>
        <div class="col-md-2">
            <a href="@Url.Action("PItem","Product")" class="btn btn-primary form-control">Add New Item</a>
        </div>
    </div>
    <hr />
    <p class="text-center">@ViewBag.msg</p><br />
    <div class="table mt-3">
        <table class="table table-bordered table-sm" id="ItemTable">
            <thead>
                <tr>
                    <th>BatchNo#</th>
                    <th>Item</th>
                    <th>Size</th>
                    <th>Colour</th>
                    <th>CostRate</th>
                    <th>SaleRate</th>
                    <th>PackQty</th>
                    <th>StockInHand</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var mode in Model)
                {
                <tr>
                    <td>@mode.BatchNo</td>
                    <td>@mode.Item</td>
                    <td>@mode.Size</td>
                    <td>@mode.Colour</td>
                    <td>@mode.CostRate</td>
                    <td>@mode.SaleRate</td>
                    <td>@mode.PackQty</td>
                    <td>@mode.StockInHand @mode.Unit</td>
                    <td>
                        <a href="@Url.Action("PItemDelete","Product",new {Id=mode.Id })" class="btn btn-sm btn-danger">Delete</a>
                        <a href="@Url.Action("PItem","Product",new {Id=mode.Id})" class="btn btn-sm btn-warning">Update</a>
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<style>
    table {
    }

        table thead tr th {
            font-size: 14px;
        }

        table tbody tr td {
            font-size: 12px;
        }
</style>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/EditAbleJs/jquery-editable-select.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="~/EditAbleJs/jquery-editable-select.min.js"></script>
<script>
    function myFunction1() {
        // Declare variables
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("MyInput1");
        filter = input.value.toUpperCase();
        table = document.getElementById("ItemTable");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    };
    function myFunction2() {
        // Declare variables
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("MyInput2");
        filter = input.value.toUpperCase();
        table = document.getElementById("ItemTable");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    };
    function myFunction3() {
        // Declare variables
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("MyInput3");
        filter = input.value.toUpperCase();
        table = document.getElementById("ItemTable");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[2];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    };
</script>

