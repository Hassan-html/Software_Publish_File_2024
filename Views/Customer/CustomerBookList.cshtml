@model IEnumerable<SialkotSweet.Models.Tbl_CustomerBook>
@{
    ViewBag.Title = "CustomerBookList";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int count = 0;
    int count_1 = 0;
}
<style>
    .sale-txt{
        color:#ff0000;
        font-weight:bold;
    }
    .pay-txt {
        color: #27c22a;
        font-weight: bold;
    }
</style>
<div class="container-fluid mt-1">
    @using (Html.BeginForm("CustomerBookList", "Customer", FormMethod.Post, new { onkeydown = "return event.keyCode!=13" }))
    {
        <div class="row">
            <div class="col-md-2">
                <input class="form-control form-control-lg" id="departmentsDropdown" name="code" placeholder="Select Rider">
            </div>
            <div class="col-md-2">
                <input type="text" class="form-control form-control-lg" id="dt1" name="dt1" placeholder="Select First Date" autocomplete="off" />
            </div>
            <div class="col-md-2">
                <input type="text" class="form-control form-control-lg" id="dt2" name="dt2" placeholder="Select Last Date" autocomplete="off" />
            </div>
            <div class="col-md-2">
                <input type="submit" name="submit" value="Search" class=" btn btn-secondary form-control" />
            </div>
            <div class="col-md-2">

            </div>
            <div class="col-md-2">
                <a href="@Url.Action("CustomerBook","Customer")" class="btn btn-primary form-control mt-1">Add New</a>
                <a href="@Url.Action("Home","Home")" class="btn btn-dark form-control mt-1"> Home</a>
                <button class="btn btn-warning form-control mt-1" onclick="printdiv('div_print');">Print</button>
            </div>
        </div>
    }
</div>
<div class="container-fluid">
    <div class="col-md-2" style="float:right">

    </div>
    <div class="table mt-2" id="div_print">
        <center>
            <h3><b>RIDER LEDGER BOOK RECORD</b></h3>
        </center>
        <table class="table table-sm table-bordered" width="100%" border="1">
            <thead>
                <tr>
                    <td><b>Date</b></td>
                    <td><b>BillNo#</b></td>
                    <td><b>Rider.Name</b></td>
                    <td><b>Gatepass</b></td>
                    <td><b>Narration</b></td>
                    <td class="sale-txt"><b>Credit</b></td>
                    <td class="pay-txt"><b>Debit</b></td>
                    <td class="sale-txt"><b>Balance</b></td>
                    <td class="text-danger hii"><b>X</b></td>
                </tr>
            </thead>
            <tbody id="tbllist">
                @foreach (var i in Model)
                {
                    if (i.SaleID > 0)
                    {
                <tr>
                    <td>@i.Date.Value.ToShortDateString()</td>
                    <td>@i.SaleID</td>
                    <td>@i.Customer</td>
                    <td>@i.GatePass</td>
                    <td>@i.Narrations</td>
                    <td class="sale-txt">@i.Credit</td>
                    <td class="pay-txt">@i.Debit</td>
                    <td class="sale-txt">
                        @{ count = count + Convert.ToInt32(i.Credit); count_1 = count_1 + Convert.ToInt32(i.Debit); ViewBag.count = Convert.ToInt32(Convert.ToInt32(count) - Convert.ToInt32(count_1)); } @ViewBag.count
                    </td>
                    <td class="hii sale-txt">
                        <b style="font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif">Sale Invoice</b>
                    </td>
                </tr>
                    }
                    else
                    {
                <tr>
                    <td>@i.Date.Value.ToShortDateString()</td>
                    <td>@i.SaleID</td>
                    <td>@i.Customer</td>
                    <td>@i.GatePass</td>
                    <td>@i.Narrations</td>
                    <td class="sale-txt">@i.Credit</td>
                    <td class="pay-txt">@i.Debit</td>
                    <td class="sale-txt">
                        @{ count = count + Convert.ToInt32(i.Credit); count_1 = count_1 + Convert.ToInt32(i.Debit); ViewBag.count = Convert.ToInt32(Convert.ToInt32(count) - Convert.ToInt32(count_1)); } @ViewBag.count
                    </td>
                    <td class="hii">
                        <a href="@Url.Action("CustomerBook","Customer",new {Id=i.Id })" class="btn btn-sm btn-warning">Edit</a>
                        <a href="@Url.Action("CustomerBookD","Customer",new {Id=i.Id,CCode=i.CCode,Customer=i.Customer })" class="btn btn-sm btn-danger">Del</a>
                    </td>
                </tr>
                    }
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="5" align="center"><b>TOTAL VALUE'S:</b></td>
                    <td class="sale-txt"><b>@Model.Sum(x => x.Credit)</b></td>
                    <td class="pay-txt"><b>@Model.Sum(x => x.Debit)</b></td>
                    <td class="sale-txt"><b>@{ ViewBag.sum = Convert.ToDecimal(Convert.ToDecimal(Model.Sum(x => x.Credit)) - Convert.ToDecimal(Model.Sum(x => x.Debit))); } @ViewBag.sum</b></td>
                </tr>
                <tr style="display:none">
                    <td colspan="5" align="center"><b>REMAINING BALANCE:</b></td>
                    <td colspan="2"><b>@{ ViewBag.sum = Convert.ToDecimal(Convert.ToDecimal(Model.Sum(x => x.Credit)) - Convert.ToDecimal(Model.Sum(x => x.Debit))); } @ViewBag.sum</b></td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>
<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
@*<link href="~/KendoUI/examples-offline.css" rel="stylesheet" />*@
<link href="~/KendoUI/default-ocean-blue.css" rel="stylesheet" />
<script src="~/KendoUI/jquery.min.js"></script>
<script src="~/KendoUI/jszip.min.js"></script>
<script src="~/KendoUI/kendo.all.min.js"></script>
<script>
    $(document).ready(function () {
        $("#dt1").kendoDatePicker({ value: new Date(), format: "yyyy-MM-dd", });
        $("#dt2").kendoDatePicker({ value: new Date(), format: "yyyy-MM-dd", });
        dataSource1 = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Customer/getCustomer",
                    dataType: "json"
                }
            }
        });
        $("#departmentsDropdown").kendoMultiColumnComboBox({
            dataTextField: "CustomerName",
            dataValueField: "CCode",
            height: 450,
            columns: [
                {
                    field: "CCode",
                    title: "CCode",
                    width: 200
                },
                {
                    field: "CustomerName",
                    title: "Customer Name",
                    width: 400
                },
                {
                    field: "Mobile",
                    title: "Mobile",
                    width: 250
                },
                {
                    field: "Address",
                    title: "Address",
                    width: 500
                }
            ],
            filter: "contains",
            filterFields: ["CustomerName", "CCode"],
            dataSource: dataSource1
        });
    });
    function printdiv(printpage) {
        $('.hii').hide();
        var headstr = "<html><head><title></title></head><body>";
        var footstr = "</body>";
        var newstr = document.all.item(printpage).innerHTML;
        var oldstr = document.body.innerHTML;
        document.body.innerHTML = headstr + newstr + footstr;
        window.print();
        location.reload();
        document.body.innerHTML = oldstr;
        return false;
    }
</script>

